type Person @model @auth(rules: [{allow: private}]) @key(name: "byAccount", fields: ["accountID"]) {
  id: ID!
  type: String!
  fName: String!
  lName: String!
  accountID: ID
  Responses: [Response] @connection(keyName: "byPerson", fields: ["id"])
}

type Question @model @auth(rules: [{allow: private}]) @key(name: "byAccount", fields: ["accountID"]) {
  id: ID!
  type: String!
  question: String!
  response: String!
  recordTemp: Boolean
  checkboxes: Matrix!
  accountID: ID
  responses: [ResponseQuestion] @connection(keyName: "byQuestion", fields: ["id"])
}

type Matrix {
  id: ID!
  familyMorning: Boolean!
  familyAfternoon: Boolean!
  staffMorning: Boolean!
  staffAfternoon: Boolean!
  manualMorning: Boolean!
  manualAfternoon: Boolean!
}

type Response @model @auth(rules: [{allow: private}]) @key(name: "byAccount", fields: ["accountID"]) @key(name: "byPerson", fields: ["personID"]) {
  id: ID!
  date: AWSDate!
  questions: [Question!]
  responses: [String!]
  passed: Boolean!
  accountID: ID
  personID: ID
  ResponseQuestions: [ResponseQuestion] @connection(keyName: "byResponse", fields: ["id"])
}

type Account @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  randomizeQuestions: Boolean!
  people: [Person!]
  questions: [Question!]
  responses: [Response!]
  People: [Person] @connection(keyName: "byAccount", fields: ["id"])
  Questions: [Question] @connection(keyName: "byAccount", fields: ["id"])
  Responses: [Response] @connection(keyName: "byAccount", fields: ["id"])
}

type ResponseQuestion @model(queries: null) @key(name: "byResponse", fields: ["responseID", "questionID"]) @key(name: "byQuestion", fields: ["questionID", "responseID"]) @auth(rules: [{allow: private}, {allow: private}]) {
  id: ID!
  responseID: ID!
  questionID: ID!
  response: Response! @connection(fields: ["responseID"])
  question: Question! @connection(fields: ["questionID"])
}
 